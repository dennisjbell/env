export CPPFLAGS=-I/opt/X11/include

# PostgreSQL
if [ -d "/usr/local/postgresql/bin" ] ; then
  export PGUSER=dbell
  export PGDATA=/var/db/postgresql/active/data
  export PGLOG=/var/log/postgresql/server.log
  export PATH=/usr/local/postgresql/bin:$PATH
fi

# Editor
export EDITOR=vim
alias vi='\vim'
alias :e="$EDITOR"

removehost() {
  ssh-keygen -R $(head -$1 ~/.ssh/known_hosts | tail -1 | awk '{print $1}' | sed -e 's/,.*//')
}

getip() {
  curl http://automation.whatismyip.com/n09230945.asp
  echo ""
}

# Node.js
if [ -d /usr/local/lib/node_modules ] ; then
  export NODE_PATH=/usr/local/lib/node_modules
fi

# Navigation
mcd() {
  mkdir -p "$1"
  cd "$1"
}

__code_base_dir() {
  local base="$HOME/code"
  if [ ! -d $base ] ; then
    base="/code"
    if [ ! -d $base ] ; then
      base=""
    fi
  fi
  echo "$base"
}


goco() {

  local base="$(__code_base_dir)"
  if [[ -z "$base" ]] 
  then
    echo "No ~/code or /code directory found"
    return 1
  fi

  local match="$(echo $1 | fold -w1 | paste -sd' ' - | sed -e 's/ /.*/g')"

  local dir="$(find $base -type d | \
    grep -v '/.git\(/\|$\)' | \
    grep "$match" | \
    awk '{ a=$0; gsub(/[^\/]/,"",$0); print length, length(a), a}' |\
    sort -k1,1n -k2,2n -k3,3d | \
    cut -d ' ' -f 3- | \
    head -n1)"

  if [[ -n "$dir" ]] ; then
    cd $dir
    [[ -f $HOME/bin/label ]] && label "[$(pwd | sed -E 's|.*/code/(src/)?[^/]*/([^/]*)/([^/]*).*|\2/\3|')@$(hostname)]"
    return 0
  else
    echo "No match found"
    return 1
  fi
}

gogit() {

  local base="$(__code_base_dir)"
  if [[ -z "$base" ]] 
  then
    echo "No ~/code or /code directory found"
    return 1
  fi
  [[ -d ${base}/src ]] && base="${base}/src"

  local host
  local org
  local repo

  # If we're in the code path
  path_info="$(pwd | sed -E 's|.*/code/(src/)?(([^/]+)(/([^/]+)(/([^/]+))?))?|\3 \5 \7|')"
  echo $path_info
  if [[ "$path_info" != "$(pwd)" ]] 
  then
    read host org repo <<< $path_info
    echo "Host: $host ; Org: $org ; Repo: $repo"
    if [[ $host == 'src' ]]
    then
      read host org  <<< "$org $repo "
      repo=''
    fi
  fi

  # Check the args for replacements
  if [[ "${#@}" -gt "3" ]]
  then
    echo "Too many arguments: Expecting 0-3 arguments [[[host] org] repo] -- got $@"
    return 1
  fi

  # Replace components with args given
  case ${#@} in 
    3)
      read host org repo <<< "$@" ;;
    2)
      read org repo <<< "$@" ;;
    1)
      repo="$1" ;;
  esac

  # Check we got it all
  if [[ -z "$host" ]] 
  then
    echo "Host cannot be determined from path and was not provided"
    return 1
  elif [[ -z "$org" ]]
  then
    echo "Organization cannot be determined from path and was not provided"
    return 1
  elif [[ -z "$repo" ]] 
  then
    echo "Repository cannot be determined from path and was not provided"
    return 1
  fi

  cd ${base}
  echo "Creating ${base}/${host}/${org}/${repo} if needed"
  mkdir -p "${host}/${org}/${repo}"
  cd ${host}/${org}/${repo}

  local host_connect
  if [[ -f "${base}/${host}/.host_connect" ]]
  then 
    host_connect="$(cat "${base}/${host}/.host_connect")"
  else
    host_connect="git@${host}:"
  fi
  echo ">" git clone "${host_connect}${org}/${repo}" .
  git clone "${host_connect}${org}/${repo}" .
  goco $PWD
}

alias ls="\ls -aFG"
alias la="\ls -laFG"
alias lsf="ls -lFAGht"
alias lsc="ls -lhG"
alias lsa='ls -lhA'
alias lst='ls -lht'
alias lsa="ls -lAht"
alias ..="cd .."
alias cdd="cd -"

# Compare
alias same="diff --unchanged-group-format=i"'"'"@@ %dn,%df%c'\012'%<"'"'" --old-group-format='' --new-group-format='' --changed-group-format=''"

if command -v pygmentize >/dev/null 2>&1
then
  alias cncat='pygmentize -g -O style=colorful,linenos=1'
  alias ccat='pygmentize -g -O style=colorful'
fi

# Utility
alias screen="screen -U"
alias reload="source ~/.bashrc"

# Search
alias fid='find . -regex '\''.*'\'' | xargs grep'

# Archiving
alias zipr="zip -r"
alias tgzc="tar -zcvf"
alias tgzx="tar -zxvf"

# -----------------------------------------------------------------------------
# Git Aliases
# -----------------------------------------------------------------------------
export PATH="$HOME/bin/git-utils:$PATH"

# Git Add
alias ga="git add"
alias gaa="git add ."

# Git Commit
alias gcam="git commit -a -m"

# Git Checkout
alias gcom="git checkout master"
alias gco="git checkout"
alias gcob="git checkout master && git pull origin master && git checkout -b"

# Git Rebase
alias grim="git rebase -i origin/master"

# Git pull
alias gup="git pull origin master"
alias gpu="git pull origin master"

# Git Log
alias gl="git log"
alias glog="git log"

# Git Status
alias gs="git status"
alias gstat="git status"

# Git Diff
alias gd="git diff -b"
alias gdiff="git diff"

if [ ! -z "$BASH_VERSION" -a ! -z "$PS1" ] ; then
  # Git should I push?
  alias push?="git cherry -v origin/master"
fi


# Git Branch
alias gb="git branch"
alias gbc="git branch | grep '* ' | awk ' {print \$2}'"
alias gbr="git branch -r"

# Git Fetch
alias gfa="git fetch --all"
alias grr='diffs="$(git status | grep "both modified:" | sed -e "s/.*both modified: *//")" vim $diffs && git add $diffs && git rebase --continue'

# Use vi mode
#set -o vi

